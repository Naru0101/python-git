#Обработка исключений
#Использование блока try-except
#Обработка различных типов исключений

# Пример обработки исключения
try:
    num = int(input("Введите число: "))
    print("Введенное число:", num)
except ValueError:
    print("Ошибка! Необходимо ввести целое число.")

#Использование блока try-except:
#Блок try-except используется для обработки исключений. Код, который может вызвать исключение, помещается в блок try, а код обработки исключения помещается в блок except.

try:
    # Попытка выполнения кода, который может вызвать исключение
    x = 10 / 0
except ZeroDivisionError:
    # Обработка исключения, возникающего при делении на ноль
    print("Ошибка: деление на ноль!")

#Обработка различных типов исключений:
#Вы также можете обрабатывать различные типы исключений, чтобы реагировать на различные виды ошибок.

try:
    # Попытка выполнения кода, который может вызвать исключение
    x = 10 / 0
except ZeroDivisionError:
    # Обработка исключения, возникающего при делении на ноль
    print("Ошибка: деление на ноль!")
except ValueError:
    # Обработка исключения, возникающего при некорректном преобразовании типов
    print("Ошибка: некорректное преобразование типов!")
except Exception as e:
    # Обработка всех остальных исключений
    print("Ошибка:", e)

#В этом примере мы обрабатываем исключение ZeroDivisionError, которое возникает при делении на ноль, и исключение ValueError, которое возникает при некорректном преобразовании типов. Мы также используем общее исключение Exception, чтобы обработать все остальные типы исключений, и выводим сообщение об ошибке.