#Структуры данных

#Списки
#Кортежи
#Строки
#Словари
#Множества

# Пример работы со списком
# Создание списка
my_list = [1, 2, 3, "apple", "banana"]

# Доступ к элементам списка по индексу
print(my_list[0])  # Выводит: 1

# Изменение элемента списка
my_list[3] = "cherry"
print(my_list)  # Выводит: [1, 2, 3, 'cherry', 'banana']

# Добавление элемента в конец списка
my_list.append("orange")
print(my_list)  # Выводит: [1, 2, 3, 'cherry', 'banana', 'orange']

# Удаление элемента из списка
del my_list[1]
print(my_list)  # Выводит: [1, 3, 'cherry', 'banana', 'orange']

#Кортежи (Tuples):

#Кортеж - это упорядоченная коллекция элементов, которая подобна списку, но является неизменяемой.

# Создание кортежа
my_tuple = (1, 2, "apple", "banana")

# Доступ к элементам кортежа по индексу
print(my_tuple[0])  # Выводит: 1

# Попытка изменения элемента кортежа приведет к ошибке
# my_tuple[0] = 5  # TypeError: 'tuple' object does not support item assignment

#Строки (Strings):

#Строка - это последовательность символов, заключенных в одинарные ('') или двойные кавычки ("").

# Создание строки
my_string = "Hello, world!"

# Доступ к символам строки по индексу
print(my_string[0])  # Выводит: H

# Изменение строки также приведет к ошибке
# my_string[0] = 'h'  # TypeError: 'str' object does not support item assignment

#Словари (Dictionaries):

#Словарь - это коллекция пар ключ-значение, которая позволяет быстро находить значение по ключу.

# Создание словаря
my_dict = {"name": "John", "age": 30, "city": "New York"}

# Доступ к значениям по ключу
print(my_dict["name"])  # Выводит: John

# Изменение значения по ключу
my_dict["age"] = 35
print(my_dict)  # Выводит: {'name': 'John', 'age': 35, 'city': 'New York'}

# Добавление новой пары ключ-значение
my_dict["gender"] = "male"
print(my_dict)  # Выводит: {'name': 'John', 'age': 35, 'city': 'New York', 'gender': 'male'}

# Удаление элемента по ключу
del my_dict["city"]
print(my_dict)  # Выводит: {'name': 'John', 'age': 35, 'gender': 'male'}

#Множества (Sets):

#Множество - это неупорядоченная коллекция уникальных элементов.

# Создание множества
my_set = {1, 2, 3, 4, 5}

# Добавление элемента в множество
my_set.add(6)
print(my_set)  # Выводит: {1, 2, 3, 4, 5, 6}

# Удаление элемента из множества
my_set.remove(3)
print(my_set)  # Выводит: {1, 2, 4, 5, 6}