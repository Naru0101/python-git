#2.1
expenses = []

# Пример добавления расходов
expenses.append(('Продукты', 50))
expenses.append(('Кино', 30))
expenses.append(('Велосипедный клуб', 20))

# Анализ расходов в конце месяца
total_expenses = sum(amount for category, amount in expenses)
print("Общие расходы за месяц:", total_expenses)

'''Сравнение массива и списка:
Массив
Фиксированный размер: Массивы имеют фиксированный размер, который нужно задать заранее. Это ограничивает их гибкость.
Быстрая индексация: Доступ к элементам массива по индексу происходит быстро.
Вставка: Вставка элементов в массив может потребовать сдвига элементов, что делает её медленной, особенно если нужно расширять массив.

Список (связанного типа, например, связанный список в Python)
Динамический размер: Списки могут изменять размер, добавление новых элементов не требует предзадания размера.
Быстрая вставка: Вставка в начало или конец списка, а также добавление после указателя (в случае связанного списка), происходит быстро и эффективно.
Чтение по индексу: Чтение по индексу может быть медленнее по сравнению с массивом, особенно в случае связанного списка, так как требуется последовательный обход.
Вывод
Для вашей задачи, где выполняется множество операций вставки и относительно немного операций чтения, список является более подходящей структурой данных. Вставка элементов в список осуществляется быстро и эффективно, в то время как для массива частые операции вставки могут оказаться затратными по времени и памяти.'''